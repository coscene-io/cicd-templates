name: Common Go deploy

on:
  workflow_call:
    inputs:
      project:
        description: 'the name of project to be built and the corresponding image'
        required: true
        type: string
      workspace:
        description: go module workspace
        required: false
        type: string
        default: '.'
      volcengine:
        description: whether push image to volcengine container registry
        required: false
        type: boolean
        default: false

    outputs:
      tag:
        value: ${{ jobs.build.outputs.tag }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: volcengine-dev-cn-shanghai
    outputs:
      tag: ${{ steps.build-and-push.outputs.TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.20.2"
      - name: Set up CD tools
        uses: coscene-io/setup-cd-tools@v2.0.1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        with:
          skaffold: '2.3.1'
      - name: ACR login
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com/coscene
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Set up buf netrc
        uses: extractions/netrc@v1
        with:
          machine: buf.build
          username: ${{ secrets.BUF_USERNAME }}
          password: ${{ secrets.BUF_TOKEN }}
      - name: Set up github netrc
        uses: extractions/netrc@v1
        with:
          machine: github.com
          username: ${{ secrets.GH_PACKAGES_ORG_USERNAME }}
          password: ${{ secrets.GH_PACKAGES_ORG_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker build & push
        id: build-and-push
        run: |
          cd ${{ inputs.workspace }}
          # Generate a unique tag based on date and commit hash
          COMMIT_SHA=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date +'%Y-%m-%d')
          UNIQUE_TAG="${BUILD_DATE}-${COMMIT_SHA}"

          # Build with unique tag instead of latest - only once
          skaffold build --build-concurrency=0 -t $UNIQUE_TAG

          # Always use the unique tag we generated
          echo "TAG=${UNIQUE_TAG}" >> $GITHUB_OUTPUT

  cp-image-to-volcengine:
    needs:
      - build
    uses: coscene-io/cicd-templates/.github/workflows/cp-image-to-volcengine.yml@fix-latest-tag-issue
    with:
      project: ${{ inputs.project }}
      tag: ${{ needs.build.outputs.tag }}
    secrets: inherit

  callout:
    needs:
      - build
    uses: coscene-io/cicd-templates/.github/workflows/image-callout.yml@fix-latest-tag-issue
    with:
      project: ${{ inputs.project }}
      tag: ${{ needs.build.outputs.tag }}
    secrets: inherit
